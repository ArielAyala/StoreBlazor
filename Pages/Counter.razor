@page "/counter"
@inject ILogger<Counter> logger;

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    [Parameter]
    public string? countParameter { get; set; }

    [SupplyParameterFromQuery]
    [Parameter]
    public string? countParameterFromQuery { get; set; }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        if (parameters.TryGetValue<string>(nameof(countParameter), out var value))
        {
            if (value is not null)
                countParameter = value;
        }
    
        await base.SetParametersAsync(parameters);
    }

    protected override void OnInitialized()
    {
        //currentCount = countParameter != null ? int.Parse(countParameter) : 0;
        currentCount = countParameterFromQuery != null ? int.Parse(countParameterFromQuery) : 0;
        logger.LogInformation($"OnInitialized {currentCount}");
    }

    protected override void OnParametersSet()
    {
        
        logger.LogInformation($"OnParametersSet {currentCount}");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        logger.LogInformation($"OnAfterRender  {firstRender}");
    }
    private void IncrementCount()
    {
        currentCount++;
    }
}
