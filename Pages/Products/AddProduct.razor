@page "/add-product"
@inject IProductService _productService
@inject ICategoryService _categoryService
@inject NavigationManager _navigationManager

<PageTitle>Add product</PageTitle>
<TitleComponent Title="Add product" />

<button class="btn btn-primary" @onclick="@(()=> _navigationManager.NavigateTo("/products"))">Go back to products</button>
<EditForm Model="@product" OnSubmit="@SaveProduct">
    <div class="row">
        <div class="col-6 form-group">
            <label for="title" class="col-form-labe">Title</label>
            <InputText id="title" @bind-Value="product.Title" required class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col-4 form-group">
            <label for="price" class="col-form-labe">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" min="0" required class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col-6 form-group">
            <label for="category">Category</label>
            <InputSelect id="category" @bind-Value="product.CategoryId" required class="form-control">
                <option>Select category</option>
                @foreach (var category in categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
        </div>
        <div class="col-6 form-group">
            <label for="image">Image(URL)</label>
            <InputText id="image" @bind-Value="product.Image" required class="form-control"></InputText>
        </div>
    </div>

    <div class="row">
        <div class="col-8 form-group">
            <label for="description" class="col-form-labe">Description</label>
            <InputTextArea id="description" @bind-Value="product.Description" required class="form-control" />
        </div>
    </div>
    <hr />
    <button class="btn btn-primary" type="submit">Save</button>

</EditForm>

@code
{
    private Product product = new();

    private List<Category> categories = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        categories = await _categoryService.GetCategories();
        
    }

    private async Task SaveProduct()
    {
        product.Images = new string[1] { product.Image };
        await _productService.AddProduct(product);
        _navigationManager.NavigateTo("/products");
    }

}